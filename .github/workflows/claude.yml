name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      ((github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude') && !contains(github.event.comment.user.login, '[bot]')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude') && !contains(github.event.comment.user.login, '[bot]')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude') && !contains(github.event.review.user.login, '[bot]')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')) && !contains(github.event.issue.user.login, '[bot]')))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
      id-token: write
      actions: read # Required for Claude to read CI results on PRs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup environment
        id: setup
        uses: ./.github/actions/setup-environment
        with:
          setup-db: true

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@beta
        env:
          DATABASE_URL: ${{ steps.setup.outputs.database-url }}
          DATABASE_URL_UNPOOLED: ${{ steps.setup.outputs.database-url-unpooled }}
          NEXTAUTH_URL: ${{ steps.setup.outputs.nextauth-url }}
          NEXTAUTH_SECRET: ${{ steps.setup.outputs.nextauth-secret }}
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          # This is an optional setting that allows Claude to read CI results on PRs
          additional_permissions: |
            actions: read

          # Specify model (Opus 4 primary, Sonnet 4 fallback)
          model: "claude-opus-4-0"
          fallback_model: "claude-sonnet-4-0"

          # Configuration
          timeout_minutes: 30
          max_turns: 50

          # Optional: Customize the trigger phrase (default: @claude)
          # trigger_phrase: "/claude"

          # Optional: Trigger when specific user is assigned to an issue
          # assignee_trigger: "claude-bot"

          # Allow Claude to run specific commands
          allowed_tools: "Bash(pnpm install),Bash(pnpm dev),Bash(pnpm build),Bash(pnpm lint),Bash(pnpm type-check),Bash(pnpm db:*),Bash(pnpm format),mcp__github__create_pending_pull_request_review,mcp__github__add_pull_request_review_comment_to_pending_review,mcp__github__submit_pending_pull_request_review,mcp__github__get_pull_request_diff"

          # Add custom instructions for Claude to customize its behavior for your project
          custom_instructions: |
            This is a Next.js 15 PWA for veterinary medication tracking.
            Tech stack: TypeScript, React 19, Tailwind CSS v4, tRPC, Prisma, Neon DB
            Follow the project conventions in CLAUDE.md
            Use pnpm for all package management
            Ensure code is TypeScript strict mode compliant
            Dependencies are already installed via pnpm

          # Optional: Custom environment variables for Claude
          # claude_env: |
          #   NODE_ENV: test
