name: Claude Code Review

on:
  pull_request:
    types: [opened, synchronize]
    # Only run on specific file changes
    paths:
      - "**/*.{js,ts,cjs,mjs,d.cts,d.mts,jsx,tsx,json,jsonc,Dockerfile,docker-compose.yml}"
      - ".github/**/*"

jobs:
  claude-review:
    # Skip for bot users to prevent infinite loops
    if: |
      !contains(github.event.pull_request.user.login, '[bot]')

    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
      id-token: write
      actions: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup environment
        id: setup
        uses: ./.github/actions/setup-environment
        with:
          setup-db: true

      - name: Run Claude Code Review
        id: claude-review
        uses: anthropics/claude-code-action@beta
        env:
          DATABASE_URL: ${{ steps.setup.outputs.database-url }}
          DATABASE_URL_UNPOOLED: ${{ steps.setup.outputs.database-url-unpooled }}
          NEXTAUTH_URL: ${{ steps.setup.outputs.nextauth-url }}
          NEXTAUTH_SECRET: ${{ steps.setup.outputs.nextauth-secret }}
        with:
          mode: agent
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          # Specify model (Opus 4 primary, Sonnet 4 fallback)
          model: "claude-opus-4-0"
          fallback_model: "claude-sonnet-4-0"

          # Configuration
          use_sticky_comment: true
          timeout_minutes: 60
          max_turns: 50

          # Direct prompt for automated review (no @claude mention needed)
          direct_prompt: |
            Please review this pull request and provide comprehensive feedback.

            Focus on:
            - Code quality and best practices
            - Potential bugs, issues, or logic errors
            - Performance considerations
            - Security concerns
            - Test coverage
            - Documentation updates if needed

            Be constructive and helpful in your feedback.

            Provide constructive feedback with specific suggestions for improvement.
            Use inline comments to highlight specific areas of concern.

            Provide specific, actionable feedback.

          # Optional: Customize review based on file types
          # direct_prompt: |
          #   Review this PR focusing on:
          #   - For TypeScript files: Type safety and proper interface usage
          #   - For API endpoints: Security, input validation, and error handling
          #   - For React components: Performance, accessibility, and best practices
          #   - For tests: Coverage, edge cases, and test quality

          # Optional: Different prompts for different authors
          # direct_prompt: |
          #   ${{ github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR' &&
          #   'Welcome! Please review this PR from a first-time contributor. Be encouraging and provide detailed explanations for any suggestions.' ||
          #   'Please provide a thorough code review focusing on our coding standards and best practices.' }}

          # Add specific tools for running tests or linting
          allowed_tools: "Bash(pnpm*),mcp__github__create_pending_pull_request_review,mcp__github__add_pull_request_review_comment_to_pending_review,mcp__github__submit_pending_pull_request_review,mcp__github__get_pull_request_diff"

          # Optional: Skip review for certain conditions
          # if: |
          #   !contains(github.event.pull_request.title, '[skip-review]') &&
          #   !contains(github.event.pull_request.title, '[WIP]')
