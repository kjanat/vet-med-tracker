name: Create/Delete Branch for Pull Request

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - closed

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

permissions:
  contents: read
  pull-requests: write

jobs:
  setup:
    name: Setup
    outputs:
      branch: ${{ steps.branch_name.outputs.current_branch }}
    runs-on: ubuntu-latest
    steps:
      - name: Get branch name
        id: branch_name
        uses: tj-actions/branch-names@v8

  create_neon_branch:
    name: Create Neon Branch
    outputs:
      db_url: ${{ steps.create_neon_branch_encode.outputs.db_url }}
      db_url_pooled: ${{ steps.create_neon_branch_encode.outputs.db_url_pooled }}
    needs: setup
    if: |
      github.event_name == 'pull_request' && (
      github.event.action == 'synchronize'
      || github.event.action == 'opened'
      || github.event.action == 'reopened')
    runs-on: ubuntu-latest
    steps:
      - name: Create Neon Branch
        id: create_neon_branch
        uses: neondatabase/create-branch-action@v6
        with:
          project_id: ${{ vars.NEON_PROJECT_ID }}
          branch_name: preview/pr-${{ github.event.number }}-${{ needs.setup.outputs.branch }}
          api_key: ${{ secrets.NEON_API_KEY }}
      - run: echo db_url ${{ steps.create_neon_branch.outputs.db_url }} # the password is masked when printed
      - run: echo host ${{ steps.create_neon_branch.outputs.host }}
      - run: echo branch_id ${{ steps.create_neon_branch.outputs.branch_id }}
      - run: psql ${{ steps.create_neon_branch.outputs.db_url }} -c "SELECT * FROM NOW();"

     - name: Chekout
       uses: actions/checkout@v4

      # The step above creates a new Neon branch.
      # You may want to do something with the new branch, such as run migrations, run tests
      # on it, or send the connection details to a hosting platform environment.
      # The branch DATABASE_URL is available to you via:
      # "${{ steps.create_neon_branch.outputs.db_url_pooled }}".
      # It's important you don't log the DATABASE_URL as output as it contains a username and
      # password for your database.
      # For example, you can uncomment the lines below to run a database migration command:
      - name: Run Migrations
        run: |
          corepack enable
          pnpm run db:migrate
        env:
          # to use pooled connection
          DATABASE_URL: "${{ steps.create_neon_branch.outputs.db_url_pooled }}"
          # OR to use unpooled connection
          # DATABASE_URL: "${{ steps.create_neon_branch.outputs.db_url }}"

      # Following the step above, which runs database migrations, you may want to check
      # for schema changes in your database. We recommend using the following action to
      # post a comment to your pull request with the schema diff.
      #
      # You can also check out https://github.com/neondatabase/schema-diff-action for more
      # information on how to use the schema diff action.
      # You can uncomment the lines below to enable the schema diff action.
      - name: Post Schema Diff Comment to PR
        uses: neondatabase/schema-diff-action@v1
        with:
          project_id: ${{ vars.NEON_PROJECT_ID }}
          compare_branch: preview/pr-${{ github.event.number }}-${{ needs.setup.outputs.branch }}
          api_key: ${{ secrets.NEON_API_KEY }}

  delete_neon_branch:
    name: Delete Neon Branch
    needs: setup
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Delete Neon Branch
        uses: neondatabase/delete-branch-action@v3
        with:
          project_id: ${{ vars.NEON_PROJECT_ID }}
          branch: preview/pr-${{ github.event.number }}-${{ needs.setup.outputs.branch }}
          api_key: ${{ secrets.NEON_API_KEY }}
