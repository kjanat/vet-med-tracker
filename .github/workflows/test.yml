name: Test

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_call:
    inputs:
      database_url:
        description: 'Database URL for testing (if not provided, uses local PostgreSQL)'
        required: false
        type: string
      database_url_unpooled:
        description: 'Unpooled database URL for testing'
        required: false
        type: string

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        # Only start PostgreSQL if we're not using external database
        image: ${{ inputs.database_url && 'hello-world' || 'postgres:17' }}
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: vetmed_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Setup environment
        uses: ./.github/actions/setup-environment

      - name: Setup test database
        env:
          DATABASE_URL: ${{ inputs.database_url || 'postgresql://postgres:postgres@localhost:5432/vetmed_test' }}
          DATABASE_URL_UNPOOLED: ${{ inputs.database_url_unpooled || 'postgresql://postgres:postgres@localhost:5432/vetmed_test' }}
          NEXT_PUBLIC_STACK_PROJECT_ID: test-stack-project-id
          NEXT_PUBLIC_STACK_PUBLISHABLE_CLIENT_KEY: test-stack-client-key
          STACK_SECRET_SERVER_KEY: test-stack-server-key
        run: |
          # Use db:push for local PostgreSQL, skip for external (already migrated)
          if [[ -z "${{ inputs.database_url }}" ]]; then
            pnpm db:push --force
          else
            echo "Using external database - skipping schema push"
          fi

      - name: Run integration tests
        env:
          DATABASE_URL: ${{ inputs.database_url || 'postgresql://postgres:postgres@localhost:5432/vetmed_test' }}
          DATABASE_URL_UNPOOLED: ${{ inputs.database_url_unpooled || 'postgresql://postgres:postgres@localhost:5432/vetmed_test' }}
          TEST_DATABASE_URL: ${{ inputs.database_url || 'postgresql://postgres:postgres@localhost:5432/vetmed_test' }}
          AUTH_SECRET: test-secret-key-for-testing
          AUTH_REDIRECT_PROXY_URL: http://localhost:3000/api/auth
          OPENAUTH_CLIENT_ID: test-client-id
          OPENAUTH_CLIENT_SECRET: test-client-secret
          OPENAUTH_ISSUER: https://auth.example.com
          NEXT_PUBLIC_STACK_PROJECT_ID: test-stack-project-id
          NEXT_PUBLIC_STACK_PUBLISHABLE_CLIENT_KEY: test-stack-client-key
          STACK_SECRET_SERVER_KEY: test-stack-server-key
        run: pnpm test:integration

      - name: Install Playwright browsers
        run: pnpm playwright install --with-deps

      - name: Run E2E tests
        env:
          DATABASE_URL: ${{ inputs.database_url || 'postgresql://postgres:postgres@localhost:5432/vetmed_test' }}
          DATABASE_URL_UNPOOLED: ${{ inputs.database_url_unpooled || 'postgresql://postgres:postgres@localhost:5432/vetmed_test' }}
          AUTH_SECRET: test-secret-key-for-testing
          AUTH_REDIRECT_PROXY_URL: http://localhost:3000/api/auth
          OPENAUTH_CLIENT_ID: test-client-id
          OPENAUTH_CLIENT_SECRET: test-client-secret
          OPENAUTH_ISSUER: https://auth.example.com
          NEXT_PUBLIC_STACK_PROJECT_ID: test-stack-project-id
          NEXT_PUBLIC_STACK_PUBLISHABLE_CLIENT_KEY: test-stack-client-key
          STACK_SECRET_SERVER_KEY: test-stack-server-key
        run: pnpm test:e2e

      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
